{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\git\\\\Visual-Studio\\\\React\\\\alien-clock\\\\src\\\\components\\\\alienClockApp.jsx\";\nimport React, { Component } from 'react';\nimport AlienClockDisplay from './alienClockDisplay';\nimport SetAlienClockButton from './setAlienClockButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlienClockApp extends Component {\n  constructor(props) {\n    super(props);\n    this.getAlienTime = earthTime => {\n      // Calculate Alien time values based on the current Earth time\n      const earthYear = earthTime.getFullYear();\n      const earthMonth = earthTime.getMonth() + 1;\n      const earthDay = earthTime.getDate();\n      const earthHour = earthTime.getHours();\n      const earthMinute = earthTime.getMinutes();\n      const earthSecond = earthTime.getSeconds();\n\n      // Implement your conversion logic to calculate Alien time here\n      // For now, I'm just copying Earth time to Alien time as a placeholder\n      return {\n        year: earthYear,\n        month: earthMonth,\n        day: earthDay,\n        hour: earthHour,\n        minute: earthMinute,\n        second: earthSecond\n      };\n    };\n    this.updateAlienClock = () => {\n      // Your clock update logic remains the same\n    };\n    this.setAlienClock = () => {\n      // Implement the logic to set the Alien time based on user input\n    };\n    this.daysInMonth = [[44, 42, 48, 40, 48, 44, 40, 44, 42], [40, 40, 42, 44, 48, 42, 40, 44, 38]];\n    const now = new Date();\n\n    // Calculate the initial Alien time based on the current Earth time\n    const alienTime = this.getAlienTime(now);\n    this.state = {\n      alienYear: alienTime.year,\n      alienMonth: alienTime.month,\n      alienDay: alienTime.day,\n      alienHour: alienTime.hour,\n      alienMinute: alienTime.minute,\n      alienSecond: alienTime.second\n    };\n  }\n  componentDidMount() {\n    this.updateClockInterval = setInterval(this.updateAlienClock, 500); // Update every 1 alien second (every 500ms earth second)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateClockInterval);\n  }\n  render() {\n    const {\n      alienYear,\n      alienMonth,\n      alienDay,\n      alienHour,\n      alienMinute,\n      alienSecond\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alien-clock\",\n      children: [/*#__PURE__*/_jsxDEV(AlienClockDisplay, {\n        alienYear: alienYear,\n        alienMonth: alienMonth,\n        alienDay: alienDay,\n        alienHour: alienHour,\n        alienMinute: alienMinute,\n        alienSecond: alienSecond\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SetAlienClockButton, {\n        onClick: this.setAlienClock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AlienClockApp;","map":{"version":3,"names":["React","Component","AlienClockDisplay","SetAlienClockButton","jsxDEV","_jsxDEV","AlienClockApp","constructor","props","getAlienTime","earthTime","earthYear","getFullYear","earthMonth","getMonth","earthDay","getDate","earthHour","getHours","earthMinute","getMinutes","earthSecond","getSeconds","year","month","day","hour","minute","second","updateAlienClock","setAlienClock","daysInMonth","now","Date","alienTime","state","alienYear","alienMonth","alienDay","alienHour","alienMinute","alienSecond","componentDidMount","updateClockInterval","setInterval","componentWillUnmount","clearInterval","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/DELL/OneDrive/Documents/git/Visual-Studio/React/alien-clock/src/components/alienClockApp.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport AlienClockDisplay from './alienClockDisplay';\r\nimport SetAlienClockButton from './setAlienClockButton';\r\n\r\nclass AlienClockApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.daysInMonth = [\r\n      [44, 42, 48, 40, 48, 44, 40, 44, 42],\r\n      [40, 40, 42, 44, 48, 42, 40, 44, 38],\r\n    ];\r\n\r\n    const now = new Date();\r\n\r\n    // Calculate the initial Alien time based on the current Earth time\r\n    const alienTime = this.getAlienTime(now);\r\n\r\n    this.state = {\r\n      alienYear: alienTime.year,\r\n      alienMonth: alienTime.month,\r\n      alienDay: alienTime.day,\r\n      alienHour: alienTime.hour,\r\n      alienMinute: alienTime.minute,\r\n      alienSecond: alienTime.second,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateClockInterval = setInterval(this.updateAlienClock, 500); // Update every 1 alien second (every 500ms earth second)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateClockInterval);\r\n  }\r\n\r\n  getAlienTime = (earthTime) => {\r\n    // Calculate Alien time values based on the current Earth time\r\n    const earthYear = earthTime.getFullYear();\r\n    const earthMonth = earthTime.getMonth() + 1;\r\n    const earthDay = earthTime.getDate();\r\n    const earthHour = earthTime.getHours();\r\n    const earthMinute = earthTime.getMinutes();\r\n    const earthSecond = earthTime.getSeconds();\r\n\r\n    // Implement your conversion logic to calculate Alien time here\r\n    // For now, I'm just copying Earth time to Alien time as a placeholder\r\n    return {\r\n      year: earthYear,\r\n      month: earthMonth,\r\n      day: earthDay,\r\n      hour: earthHour,\r\n      minute: earthMinute,\r\n      second: earthSecond,\r\n    };\r\n  };\r\n\r\n  updateAlienClock = () => {\r\n    // Your clock update logic remains the same\r\n  };\r\n\r\n  setAlienClock = () => {\r\n    // Implement the logic to set the Alien time based on user input\r\n  };\r\n\r\n  render() {\r\n    const { alienYear, alienMonth, alienDay, alienHour, alienMinute, alienSecond } = this.state;\r\n\r\n    return (\r\n      <div className=\"alien-clock\">\r\n        <AlienClockDisplay\r\n          alienYear={alienYear}\r\n          alienMonth={alienMonth}\r\n          alienDay={alienDay}\r\n          alienHour={alienHour}\r\n          alienMinute={alienMinute}\r\n          alienSecond={alienSecond}\r\n        />\r\n        <SetAlienClockButton onClick={this.setAlienClock} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlienClockApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}