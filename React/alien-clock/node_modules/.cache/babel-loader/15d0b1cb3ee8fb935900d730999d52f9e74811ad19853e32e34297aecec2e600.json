{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\git\\\\Visual-Studio\\\\React\\\\alien-clock\\\\src\\\\components\\\\alienClockApp.jsx\";\nimport React, { Component } from 'react';\nimport AlienClockDisplay from './alienClockDisplay';\nimport SetAlienClockButton from './setAlienClockButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlienClockApp extends Component {\n  constructor(props) {\n    super(props);\n\n    // Define the daysInMonth variable here\n    this.updateAlienClock = () => {\n      const {\n        alienYear,\n        alienMonth,\n        alienDay,\n        alienHour,\n        alienMinute,\n        alienSecond\n      } = this.state;\n      let newSecond = alienSecond + 1;\n      if (newSecond >= 90) {\n        newSecond = 0;\n        let newMinute = alienMinute + 1;\n        if (newMinute >= 90) {\n          newMinute = 0;\n          let newHour = alienHour + 1;\n          if (newHour >= 36) {\n            newHour = 0;\n            let newDay = alienDay + 1;\n            if (newDay > this.daysInMonth[alienYear % 2][alienMonth - 1]) {\n              newDay = 1;\n              let newMonth = alienMonth + 1;\n              if (newMonth > 18) {\n                newMonth = 1;\n                const newYear = alienYear + 1;\n                this.setState({\n                  alienYear: newYear\n                });\n              }\n              this.setState({\n                alienMonth: newMonth\n              });\n            }\n            this.setState({\n              alienDay: newDay\n            });\n          }\n          this.setState({\n            alienHour: newHour\n          });\n        }\n        this.setState({\n          alienMinute: newMinute\n        });\n      }\n      ;\n    };\n    this.setAlienClock = () => {\n      const newYear = parseInt(prompt(\"Enter Alien Year (2804 or higher):\"));\n      const newMonth = parseInt(prompt(\"Enter Alien Month (1-18):\"));\n      const newDay = parseInt(prompt(\"Enter Alien Day (1-48):\"));\n      const newHour = parseInt(prompt(\"Enter Alien Hour (0-35):\"));\n      const newMinute = parseInt(prompt(\"Enter Alien Minute (0-89):\"));\n      const newSecond = parseInt(prompt(\"Enter Alien Second (0-89):\"));\n      if (Number.isInteger(newYear) && Number.isInteger(newMonth) && Number.isInteger(newDay) && Number.isInteger(newHour) && Number.isInteger(newMinute) && Number.isInteger(newSecond) && newYear >= 2804 && newMonth >= 1 && newMonth <= 18 && newDay >= 1 && newDay <= 48 && newHour >= 0 && newHour <= 35 && newMinute >= 0 && newMinute <= 89 && newSecond >= 0 && newSecond <= 89) {\n        this.setState({\n          alienYear: newYear,\n          alienMonth: newMonth,\n          alienDay: newDay,\n          alienHour: newHour,\n          alienMinute: newMinute,\n          alienSecond: newSecond\n        });\n      } else {\n        alert(\"Invalid input. Please enter valid integers within the specified ranges.\");\n      }\n    };\n    this.daysInMonth = [[44, 42, 48, 40, 48, 44, 40, 44, 42], [40, 40, 42, 44, 48, 42, 40, 44, 38]];\n\n    // Get the current system time\n    const now = new Date();\n    this.state = {\n      alienYear: now.getFullYear(),\n      alienMonth: now.getMonth() + 1,\n      alienDay: now.getDate(),\n      alienHour: now.getHours(),\n      alienMinute: now.getMinutes(),\n      alienSecond: now.getSeconds()\n    };\n  }\n  componentDidMount() {\n    this.updateClockInterval = setInterval(this.updateAlienClock, 50); // Update every 1 Alien second (500ms in Earth time)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateClockInterval);\n  }\n  render() {\n    const {\n      alienYear,\n      alienMonth,\n      alienDay,\n      alienHour,\n      alienMinute,\n      alienSecond\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alien-clock\",\n      children: [/*#__PURE__*/_jsxDEV(AlienClockDisplay, {\n        alienYear: alienYear,\n        alienMonth: alienMonth,\n        alienDay: alienDay,\n        alienHour: alienHour,\n        alienMinute: alienMinute,\n        alienSecond: alienSecond\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SetAlienClockButton, {\n        onClick: this.setAlienClock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AlienClockApp;","map":{"version":3,"names":["React","Component","AlienClockDisplay","SetAlienClockButton","jsxDEV","_jsxDEV","AlienClockApp","constructor","props","updateAlienClock","alienYear","alienMonth","alienDay","alienHour","alienMinute","alienSecond","state","newSecond","newMinute","newHour","newDay","daysInMonth","newMonth","newYear","setState","setAlienClock","parseInt","prompt","Number","isInteger","alert","now","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","componentDidMount","updateClockInterval","setInterval","componentWillUnmount","clearInterval","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/DELL/OneDrive/Documents/git/Visual-Studio/React/alien-clock/src/components/alienClockApp.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport AlienClockDisplay from './alienClockDisplay';\r\nimport SetAlienClockButton from './setAlienClockButton';\r\n\r\nclass AlienClockApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Define the daysInMonth variable here\r\n    this.daysInMonth = [\r\n      [44, 42, 48, 40, 48, 44, 40, 44, 42],\r\n      [40, 40, 42, 44, 48, 42, 40, 44, 38],\r\n    ];\r\n\r\n     // Get the current system time\r\n     const now = new Date();\r\n\r\n     this.state = {\r\n       alienYear: now.getFullYear(),\r\n       alienMonth: now.getMonth() + 1,\r\n       alienDay: now.getDate(),\r\n       alienHour: now.getHours(),\r\n       alienMinute: now.getMinutes(),\r\n       alienSecond: now.getSeconds(),\r\n     };\r\n   }\r\n\r\n  \r\n  componentDidMount() {\r\n    this.updateClockInterval = setInterval(this.updateAlienClock, 50); // Update every 1 Alien second (500ms in Earth time)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateClockInterval);\r\n  }\r\n\r\n  updateAlienClock = () => {\r\n    const {\r\n      alienYear,\r\n      alienMonth,\r\n      alienDay,\r\n      alienHour,\r\n      alienMinute,\r\n      alienSecond,\r\n    } = this.state;\r\n  \r\n    let newSecond = alienSecond + 1;\r\n    if (newSecond >= 90) {\r\n      newSecond = 0;\r\n      let newMinute = alienMinute + 1;\r\n      if (newMinute >= 90) {\r\n        newMinute = 0;\r\n        let newHour = alienHour + 1;\r\n        if (newHour >= 36) {\r\n          newHour = 0;\r\n          let newDay = alienDay + 1;\r\n          if (newDay > this.daysInMonth[alienYear % 2][alienMonth - 1]) {\r\n            newDay = 1;\r\n            let newMonth = alienMonth + 1;\r\n            if (newMonth > 18) {\r\n              newMonth = 1;\r\n              const newYear = alienYear + 1;\r\n              this.setState({\r\n                alienYear: newYear,\r\n              });\r\n            }\r\n            this.setState({\r\n              alienMonth: newMonth,\r\n            });\r\n          }\r\n          this.setState({\r\n            alienDay: newDay,\r\n          });\r\n        }\r\n        this.setState({\r\n          alienHour: newHour,\r\n        });\r\n      }\r\n      this.setState({\r\n        alienMinute: newMinute,\r\n      });\r\n    };\r\n  };\r\n  \r\n  setAlienClock = () => {\r\n    const newYear = parseInt(prompt(\"Enter Alien Year (2804 or higher):\"));\r\n    const newMonth = parseInt(prompt(\"Enter Alien Month (1-18):\"));\r\n    const newDay = parseInt(prompt(\"Enter Alien Day (1-48):\"));\r\n    const newHour = parseInt(prompt(\"Enter Alien Hour (0-35):\"));\r\n    const newMinute = parseInt(prompt(\"Enter Alien Minute (0-89):\"));\r\n    const newSecond = parseInt(prompt(\"Enter Alien Second (0-89):\"));\r\n\r\n    if (\r\n      Number.isInteger(newYear) &&\r\n      Number.isInteger(newMonth) &&\r\n      Number.isInteger(newDay) &&\r\n      Number.isInteger(newHour) &&\r\n      Number.isInteger(newMinute) &&\r\n      Number.isInteger(newSecond) &&\r\n      newYear >= 2804 &&\r\n      newMonth >= 1 &&\r\n      newMonth <= 18 &&\r\n      newDay >= 1 &&\r\n      newDay <= 48 &&\r\n      newHour >= 0 &&\r\n      newHour <= 35 &&\r\n      newMinute >= 0 &&\r\n      newMinute <= 89 &&\r\n      newSecond >= 0 &&\r\n      newSecond <= 89\r\n    ) {\r\n      this.setState({\r\n        alienYear: newYear,\r\n        alienMonth: newMonth,\r\n        alienDay: newDay,\r\n        alienHour: newHour,\r\n        alienMinute: newMinute,\r\n        alienSecond: newSecond,\r\n      });\r\n    } else {\r\n      alert(\"Invalid input. Please enter valid integers within the specified ranges.\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      alienYear,\r\n      alienMonth,\r\n      alienDay,\r\n      alienHour,\r\n      alienMinute,\r\n      alienSecond,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"alien-clock\">\r\n        <AlienClockDisplay\r\n          alienYear={alienYear}\r\n          alienMonth={alienMonth}\r\n          alienDay={alienDay}\r\n          alienHour={alienHour}\r\n          alienMinute={alienMinute}\r\n          alienSecond={alienSecond}\r\n        />\r\n        <SetAlienClockButton onClick={this.setAlienClock} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlienClockApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}